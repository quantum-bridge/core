// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/transfers/approve": {
            "post": {
                "description": "Approve is an HTTP handler that creates an approval transaction for a spender.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Approve",
                "operationId": "approve",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ApproveDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/responses.TransactionsResponse"
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.ApproveDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/requests.ApproveRequest"
                }
            }
        },
        "requests.ApproveRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address is the address of the spender.",
                    "type": "string"
                },
                "chain_id": {
                    "description": "ChainID is the ID of the chain.",
                    "type": "string"
                },
                "token_id": {
                    "description": "TokenID is the ID of the token.",
                    "type": "string"
                }
            }
        },
        "responses.TransactionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data is the data of the response."
                },
                "included": {
                    "description": "Included is the included data of the response.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Core bridge API",
	Description:      "Core bridge API is a service that responsible for the communication between blockchains.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
